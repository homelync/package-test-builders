"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const logger_1 = require("../logging/logger");
const hooked = require('cls-hooked');
const namespaceKey = 'request';
const requestIdKey = 'requestId';
const correlationIdKey = 'correlationId';
const env = process.env;
function getCorrelationId() {
    const correlationId = getStoredValue(correlationIdKey);
    return correlationId;
}
exports.getCorrelationId = getCorrelationId;
function getRequestId() {
    return getStoredValue(requestIdKey);
}
exports.getRequestId = getRequestId;
function createAsyncLocalNamespace() {
    var ns = hooked.getNamespace(namespaceKey) || hooked.createNamespace(namespaceKey);
    return ns;
}
exports.createAsyncLocalNamespace = createAsyncLocalNamespace;
function setCorrelationId(correlationId, requestId) {
    var getNamespace = hooked.getNamespace;
    var ns = getNamespace(namespaceKey);
    if (!correlationId) {
        correlationId = requestId;
    }
    logger_1.Logger.verbose('Setting correlationId: ' + correlationId);
    ns.set(requestIdKey, requestId);
    ns.set(correlationIdKey, correlationId);
}
exports.setCorrelationId = setCorrelationId;
function getStoredValue(key) {
    var getNamespace = hooked.getNamespace;
    var session = getNamespace(namespaceKey);
    var value = `${env.LAMBDA_NAME}-system`;
    if (session && session.get(key)) {
        value = session.get(key);
    }
    return value;
}
//# sourceMappingURL=asyncLocalStore.js.map